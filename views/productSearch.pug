doctype html
meta(name='viewport', content='width=device-width, initial-scale=1.0')
html
    head
        title= Pantracker
        link(rel='stylesheet', href='/stylesheets/productSearch.css')

    body
        div(id = 'loader')
        form(method="GET" action="/")
                button(type='submit') homepage
        form(method="GET" action="/product/delete")
                button(type='submit', class = "refresh") refresh
        //- form(method="GET" action="/product/delete")
        //-         button(type='submit') refresh
        div(id = 'productList')
            table
                thead
                    tr
                        th product name
                        th product price
                        th store name
                        //- th store location
                        //- th store number
                        th stock status
                tbody

    script.

        function httpGet(theUrl) {
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open( "GET", theUrl, false ); // false for synchronous request
            xmlHttp.send( null );
            return xmlHttp;
            };

        function generateTable(table, data) {
            for (let element of data) {
                let row = table.insertRow();
                let elementNames = ['productName', 'productPrice', 'storeName', 'productStatus'];
                for (key in elementNames) {
                        let cell = row.insertCell();
                        let text = document.createElement("a");
                        text.innerText = element[elementNames[key]];
                        if (elementNames[key] == 'productName') {
                            text.setAttribute('href', element['productUrl']);
                        }
                        if (elementNames[key] == 'storeName') {
                            let store_href = "/stores/" + element['storeId'];
                            text.setAttribute('href', store_href);
                        }
                        if (elementNames[key] == 'productStatus') {
                            if (element['productStatus'].toUpperCase().includes("IN")) {
                                text.style.backgroundColor = "green";
                            };
                            if (element['productStatus'].toUpperCase().includes("OUT") | element['productStatus'].toUpperCase().includes("NO") | element['productStatus'].toUpperCase().includes("UNAVAILABLE")) {
                                text.style.backgroundColor = "red";
                            };
                        }
                        cell.appendChild(text);
                        }
                    }
                };

        setInterval(function(){ 
            
            try {
                let table = document.querySelector("tbody");
                table.innerHTML = "";
                let xml = httpGet("http://localhost:3000/user/data");
                let responseText = xml.responseText;
                let jsonData = JSON.parse(responseText);
                let productList = jsonData.searchResults;
                generateTable(table, productList);
            } catch (e) {
                console.log(e)
            }

            if (document.querySelectorAll("tbody > tr").length > 0) {
                document.getElementById("loader").style.display = "none";
            }

        }, 3000);

